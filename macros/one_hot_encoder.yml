version: 2

macros:
  - name: one_hot_encoder
    description: |
      Encode categorical features as a one-hot numeric array. See scikit-learn's [OneHotEncoder](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.OneHotEncoder.html#sklearn.preprocessing.OneHotEncoder) for full documentation.

      Will append a new boolean column for every category present in the data with the name &lt;source column&gt;_&lt;category value&gt;.

      Example usage:
      #### **`models\customer_features.yml:`**
      ```
      {{ '{{' }} config(materialized='view') {{ '}}' }}

      {{ '{{' }} dbt_ml_preprocessing.one_hot_encoder( ref('customer') ,'gender') {{ '}}' }}

      ```
      Will produce a model named customer_features, with a new column named ```gender_encoded``` containing the encoded values.
    arguments:
      - name: source_table
        type: string
        description: Pass in a ref to the table containing the data you want to transform
      - name: source_column
        type: string
        description: The column containing the data you want to transform
      - name: include_columns
        type: string
        description: Other columns from the source table to be included in the model (defaults to '*' and brings all columns across)
      - name: categories
        type: string
        description: The categories of each feature determined during fitting. Defaults to 'auto', which will encode all values.
      - name: handle_unknown
        type: string
        description: Whether to raise an error or ignore if an unknown categorical feature is present during transform. Only supports the default value of 'ignore' at this time.

  - name: default__one_hot_encoder
    docs:
      show: false
